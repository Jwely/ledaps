#summary Version 2.0.0 of the LEDAPS software.

== Ledaps Version 2.0.0 Release Notes ==
Release Date: June 6, 2014

=== Downloads ===
* Ledaps source code - available via the [http://code.google.com/p/ledaps/source/checkout LEDAPS Google Projects Source] link

  * Non-members may check out a read-only working copy anonymously over HTTP.
  * svn checkout http://ledaps.googlecode.com/svn/releases/version_2.0.0 ledaps-read-only 

* Ledaps auxiliary files - available via the [http://espa.cr.usgs.gov/validations/ledaps_auxiliary/ledaps_aux.1978-2014.tar.gz LEDAPS auxiliaries] link

* Ledaps auxiliary update scripts - found in the LedapsAncSrc directory of the LEDAPS download.

=== Installation ===
Same installation instructions as for Version 1.0.0 with the addition of the ESPA raw binary libraries and tools in the [https://code.google.com/p/espa-common/ espa_common Google Project].  The user will need to build the src/raw_binary code to create the libraries used for building the current version of the LEDAPS application.

As of version 2.0.0, the do_ledaps.py script requires the ESPA XML file for input instead of the Landsat MTL file.  Use do_ledaps.py --help to obtain the usage information.

=== Dependencies ===
Same dependencies as for Version 1.0.0 with the addition of the ESPA raw binary libraries and tools in the [https://code.google.com/p/espa-common/ espa_common Google Project].  The user will need to build the src/raw_binary code to create the libraries used for building the current version of the LEDAPS application.

=== Data Preprocessing ===
This version of the LEDAPS application requires the input Landsat products to be in the ESPA internal file format.  After compiling the espa-common raw_binary libraries and tools, the convert_lpgs_to_espa command-line tool can be used to create the ESPA internal file format for input to the LEDAPS application.

=== Data Postprocessing ===
After compiling the espa-common raw_binary libraries and tools, the convert_espa_to_gtif and convert_espa_to_hdf command-line tools can be used to convert the ESPA internal file format to HDF or GeoTIFF.  Otherwise the data will remain in the ESPA internal file format, which includes each band in the ENVI file format (i.e. raw binary file with associated ENVI header file) and an overall XML metadata file.

=== Verification Data ===

=== User Manual ===

=== Product Guide ===

== Changes From Previous Version ==
====Updates on June 6, 2014 - USGS EROS====
  * Overall
    # Input products are expected to be Landsat products from LPGS converted to the ESPA internal file format (see the Data Preprocessing section for more information).
    # Output products are written in the ESPA internal file format (see the Data Postprocessing section for more information).
    # Updated all the Makefiles to use install instead of cp.

  * lndpm
    # Removed support in lndpm for any Landsat products other than LPGS products.  Scenes previously processed through NLAPS are now available via LPGS.  And, the UMD format previously supported is no longer utilized.  At the very least, all those scenes should be available from LPGS.  lndpm now reads the XML metadata file instead of the LPGS metadata file.
    # Updated lndpm to use the espa-common error handling and included ESPA headers and comments for each routine in the file.
    # Modified lndpm to pass the name of the XML file to the downstream apps in the parameter files.
    # Also, lndcal no longer needs the *.metadata.txt file, so that is no longer produced by lndpm

  * lndcal
    # Modified lndcal to pull all the metadata information from the XML file instead of the *.metadata.txt file.
    # Modified lndcal to read raw binary products vs. GeoTIFF products.
    # Removed any recalibration or DN map related code.  The latest LPGS MTL files contain the gain/bias values and they are accurate, thus they will be used in the TOA reflectance computation.
    # Brightness temperature values are now written in Kelvin vs. degrees Celsius.  The valid range is 150 to 350 Kelvin and the scaling factor has been modified to be 0.1 (vs. the previous 0.01 for degrees Celsius).  The fill value remains the same as previous products.

  * lndsr
    # Modified lndsr to pull all the metadata information from the XML file instead of the HDF file.
    # Modified lndsr to read raw binary products vs. HDF products.
    # Handled appropriate changes to deal with the brightness temp change to Kelvin vs. degrees C.
    # Replaced a few “/ 10000” with “* 0.0001” (or similar) in the cloud processing routine to speed up the math.
    # Updated all the Makefiles to use install instead of cp.

  * lndsrbm
    # Modified lndsrbm to pull all the metadata information from the XML file instead of the HDF file.
    # Modified lndsrbm to read raw binary products vs. HDF products. 
    # There is now no need to append band6 from lndth to lndsr, as it’s already part of the overall raw binary product.
    # Handled appropriate changes to deal with the brightness temp change to Kelvin vs. degrees C.
    # Rewrote all of the FORTRAN routines as it doesn’t play nicely with raw binary files, and to just clean things up and use C across the board.

  * lndapp
    # Removed lndapp since it’s no longer used for appending band6 to the lndsr product in lndsrbm.